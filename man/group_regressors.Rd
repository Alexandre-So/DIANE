% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_regressors_grouping.R
\name{group_regressors}
\alias{group_regressors}
\title{Group correlated regulators}
\usage{
group_regressors(normalized.count, genes, regressors, corr_thr = 0.9)
}
\arguments{
\item{normalized.count}{normalized expression matrix containing genes and regressors.}

\item{genes}{target genes that want to be used in the inference process}

\item{regressors}{regressor genes that want to be used in the inference process.}

\item{corr_thr}{correlation threshold to be used for regressors grouping.}
}
\value{
a named list.
counts : the normalized expression data containing the new summarized variables, in 
the format mean_geneID1-geneID2... The individual genes that were grouped are removed.
correlated_regressors_graph : visNetwork interactive plot of the correlated regulators
grouped_genes : new vector of target genes, with individual correlated genes replaced by groups
grouped_regressors : new vector of regressors, with individual correlated genes replaced by groups
}
\description{
During network inference, the importance of regressors is assessed for aech target gene.
But in the case of highly correlated regulators, only one of them could be captured by the random 
forests, stealing importance from the others, and leave the other ones with no edge, which would be incorrect.
To account for this, this function summarizes the expression of the regulators being correlated above
a certain threshold in new variables with the mean of their profiles.
}
\details{
To do so, a graph of all regressors correlated (spearman) above the threshold id built, and groups
are formed with a community detection algorithm. Each group is then averaged in a single variable.
Strongly negatively correlated regressors are added to the group it is correlated to, but their expression
is not taken into account in the summary profile.
}
\examples{
data(abiotic_stresses)
aggregated_data <- aggregate_splice_variants(abiotic_stresses$normalized_counts)
genes <- get_locus(abiotic_stresses$heat_DEGs)
regressors <- intersect(genes, regulators_per_organism[["Arabidopsis thaliana"]])
grouping <- DIANE::group_regressors(aggregated_data, genes, regressors)
print(names(grouping))
}
