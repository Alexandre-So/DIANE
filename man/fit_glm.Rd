% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_glm.R
\name{fit_glm}
\alias{fit_glm}
\title{Fits a Poisson generalized linear model to a set of genes}
\usage{
fit_glm(normalized_counts, genes, design, factors = colnames(design))
}
\arguments{
\item{normalized_counts}{normalized counts}

\item{genes}{genes belonging to a specific expression-based clusters}

\item{design}{experimental design as a dataframe}

\item{factors}{factors to use for the fit (defalut is
all the factors of the design)}
}
\value{
glm object
}
\description{
The idea is to extract the importance and effect of each factor.
To do so, the expression of each gene is modelled as a Poisson distribution.
The log of its parameter (the expected value) is approximated by a linear
combination of the factors in the experiment. The coefficients associated to 
each factors are estimated to fit gene expression, and can be insightful to
characterize genes behavior in a particular cluster.
The model with interactions is considered. It your design in not a
complete corssed design, the interaction term will be null.
}
\section{Note }{

Note that we can only apply a glm fit to a set of genes that have very close expression 
profiles accros conditions, else we would have to introduce a new variable related to the genes
themselves.
}

\examples{
library(DIANE)
data("demo_data_At")
tcc_object <- DIANE::normalize(demo_data_At$raw_counts, demo_data_At$conditions, iteration = FALSE)
threshold = 10*length(demo_data_At$conditions)
tcc_object <- DIANE::filter_low_counts(tcc_object, threshold)
normalized_counts <- TCC::getNormalizedData(tcc_object)
fit <- DIANE::estimateDispersion(tcc = tcc_object, conditions = demo_data_At$conditions)
topTags <- DIANE::estimateDEGs(fit, reference = "cNF", perturbation = "cnF", p.value = 0.01)
genes <- topTags$table$genes
clustering <- DIANE::run_coseq(conds = unique(demo_data_At$conditions), 
data = normalized_counts, genes = genes, K = 6:9)
genes_cluster <- DIANE::get_genes_in_cluster(clustering$membership, cluster = 3)
glm <- DIANE::fit_glm(normalized_counts, genes_cluster, demo_data_At$design)
summary(glm)
}
