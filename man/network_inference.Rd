% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_network_inference.R
\name{network_inference}
\alias{network_inference}
\title{Genie3 regulatory importances estimation}
\usage{
network_inference(
  normalized.count,
  conds,
  regressors,
  targets,
  nTrees = 1000,
  nCores = ifelse(is.na(parallel::detectCores()), 1, max(parallel::detectCores() - 1,
    1))
)
}
\arguments{
\item{normalized.count}{normalized expression matrix containing the regressors and target genes}

\item{conds}{condition names to be used in the inference}

\item{regressors}{genes to be taken as regressors during the inference procedures (regulator genes)}

\item{targets}{genes to be included in the inferred network. Regressors can also be in the targets}

\item{nTrees}{Number of trees by Random Forest}

\item{nCores}{Number of CPU cores to use during the procedure. Default is the detected number of cores
minus one.}
}
\value{
matrix object
}
\description{
GENIE3 needs to be fed a list of genes, that will be the nodes of the inferred network. 
Among those genes, some must be considered as potential regulators. 
GENIE3 can determine the influence if every regulators over each input genes, 
using their respective expression profiles. You can specify which conditions 
you want to be consired for those profiles during the network inference.
For each target gene, the methods uses Random Forests to provide a ranking of all 
regulators based on their influence on the target expression. This ranking is then merged 
across all targets, giving a global regulatory links ranking stored in the result matrix.
}
\examples{
\dontrun{
data("abiotic_stresses")
data("regulators_per_organism")

aggregated_data <- aggregate_splice_variants(data = abiotic_stresses$normalized_counts)

genes <- get_locus(abiotic_stresses$heat_DEGs)
regressors <- intersect(genes, regulators_per_organism[["Arabidopsis thaliana"]])

mat <- network_inference(aggregated_data, conds = abiotic_stresses$conditions, 
targets = genes, regressors = regressors)
}
}
