% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_coseq.R
\name{draw_profiles}
\alias{draw_profiles}
\title{Draw profiles of a clustering}
\usage{
draw_profiles(
  data,
  membership,
  conds,
  expression = "profiles",
  k = NULL,
  nrow = 3
)
}
\arguments{
\item{data}{normalized counts}

\item{membership}{membership item of the coseq object returned by run_coseq object}

\item{conds}{conditions on which to perform clustering, ingoring the others}

\item{expression}{if it is set to "profiles" (default), plots expression/sum(expression). if "counts", plots log(Counts+1)}

\item{k}{if NULL (default), plot all the clusters. Else, plot the clusters in the vetcor k.}

\item{nrow}{on how many rows display the cluster profiles if k is NULL}
}
\value{

}
\description{
Draw profiles of a clustering
}
\examples{
data("demo_data_At")
tcc_object <- DIANE::normalize(demo_data_At$raw_counts, demo_data_At$conditions, iteration = FALSE)
threshold = 10*length(demo_data_At$conditions)
tcc_object <- DIANE::filter_low_counts(tcc_object, threshold)
normalized_counts <- TCC::getNormalizedData(tcc_object)
fit <- DIANE::estimateDispersion(tcc = tcc_object, conditions = demo_data_At$conditions)
topTags <- DIANE::estimateDEGs(fit, reference = "cNF", perturbation = "cnF", p.value = 0.01)
genes <- topTags$table$genes
clustering <- DIANE::run_coseq(conds = unique(demo_data_At$conditions), data = normalized_counts, genes = genes, K = 6:9)
DIANE::draw_profiles(data = normalized_counts, clustering$membership, conds = unique(demo_data_At$conditions)) 
DIANE::draw_profiles(data = normalized_counts, clustering$membership, conds = unique(demo_data_At$conditions), k = 3) 
}
